---
import H1 from '../components/Heading/H1.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import GalleryModal from '../components/Base/GalleryModal.astro';
import Wrapper from '../components/Base/Wrapper.astro';
import Image from '../components/Base/Image.astro';
import { getArt } from '../lib/api/art';

const artList = await getArt()
---

<BaseLayout props
	title="Featured Artwork"
	description="The digital artwork collection of Nova Alexander"
>

	<section class="mt-28">
		<Wrapper width='max' padding='inline' class="">
			<H1>Featured Art</H1>

			<div class="grid lg:flex items-center justify-center gap-2 lg:gap-6 mb-4 text-primary-500 bg-primary-50 p-3 rounded-md">
				<div class="flex items-center gap-2">
					Spicy Content:
					<button 
						data-showSpicyContentBtn
						class="block px-2 py-0 hover:bg-primary-200 text-base rounded border border-primary-200 font-medium text-primary-500"
					>
						Show
					</button>
					<button
						data-blurSpicyContentBtn
						class="block px-2 py-0 hover:bg-primary-200 text-base rounded border border-primary-200 font-medium text-primary-500"
					>
						Blur
					</button>
				</div>

				<div class="w-[1px] bg-primary-300 self-stretch rounded-lg" />

				<div 
					data-gallery-tags 
					class="flex items-center gap-2 flex-wrap"
				>
					Tags:
				</div>
			</div>


			<div class="flex justify-center items-stretch gap-2 lg:gap-6 flex-wrap">

				{ artList.map( (art, i) => (
					<button data-art-button class=" hover:cursor-pointer relative group overflow-hidden">
						<Image 
							src={art.image.url}
							width={art.image.width}
							height={art.image.height}
							alt=""
							role="presentation"
							class='h-[125px] lg:h-[200px] w-auto rounded-md  art-button-animation'
							lazy={true}
							data-description={art.description}
							data-title={art.title}
							data-tags={JSON.stringify(art.tags)}
							data-index={i}
							data-isspicy={art.isSpicy}
						/>

						<div class="hidden lg:grid place-items-center absolute inset-0 bg-primary-100/80 opacity-0 group-hover:opacity-100 transition-all duration-300 ">
							<h2 class="text-lg font-bold font-theme translate-y-4 group-hover:translate-y-0 transition-all duration-300 m-0">
								{art.title}
							</h2>
						</div>
					</button>
				) )}

			</div>

		</Wrapper>
	</section>

	<GalleryModal slot='pageEnd' />

</BaseLayout>


<style is:global>

@keyframes art-img {
	from { opacity: 0; }
	to 	 { opacity: 1; }
}

.art-button-animation {
    animation : art-img 1s cubic-bezier(0.22, 1, 0.36, 1) both;
}

.spicy-content-is-shown button[data-showSpicyContentBtn] {
	background-color: hsl( var(--primary-color) 90 );
}

button[data-blurSpicyContentBtn] {
	background-color: hsl( var(--primary-color) 90 );
}

.spicy-content-is-shown button[data-blurSpicyContentBtn] {
	background-color: transparent;
}

img[data-isspicy] {
	filter: blur(8px);
} 

.spicy-content-is-shown img[data-isspicy] {
	filter: blur(0);
}

</style>

<script>

const spicyContentShowBtn = document.querySelector('[data-showSpicyContentBtn')
const spicyContentBlurBtn = document.querySelector('[data-blurSpicyContentBtn')

spicyContentShowBtn?.addEventListener('click', showSpicyContent)
spicyContentBlurBtn?.addEventListener('click', blurSpicyContent)

if( localStorage.getItem('spicyContent') === 'show' ) {
	showSpicyContent()
} else {
	blurSpicyContent()
}

function showSpicyContent() {
	document.body.classList.add('spicy-content-is-shown')
	localStorage.setItem('spicyContent', 'show')
	
}

function blurSpicyContent() {
	document.body.classList.remove('spicy-content-is-shown')
	localStorage.setItem('spicyContent', 'blur')
}

</script>