---
import BackToBlog from "../../../components/Blog/BackToBlog.astro";
import Post from "../../../components/Blog/Post.astro";
import H1 from "../../../components/Heading/H1.astro";
import Wrapper from "../../../components/Base/Wrapper.astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { getBlogPostList, type BlogPost } from "../../../lib/api/blogPost";
import { getDates, type BlogPostDate } from "../../../lib/api/blogDate";

interface Props {
    posts: BlogPost[],
    blogPostDate : BlogPostDate
}

export async function getStaticPaths() : Promise<any> {

    const blogPostList = await getBlogPostList({})
    const dateList = await getDates()

    return dateList.map( date => {
        const month = date.phrase.slice(0,4)
        const year  = date.phrase.slice(-4)
        const filteredPostList = blogPostList.filter( post => post.date.phrase.includes(month) && post.date.phrase.includes(year) )
        return {
            params: { date: date.numeric },
            props : { 
                posts: filteredPostList, 
                blogPostDate : date  
            }
        }
    } )
}

// const { date } : { date: string } = Astro.params
const { posts, blogPostDate } = Astro.props
---

<BaseLayout props
	title={`Blog Posts : ${blogPostDate.phrase}`}
	description="View blog posts by date in the blog of Nova Alexander"
	lang="en"
>

	<section class="mt-28">
		<Wrapper width='max' padding='inline' class="min-h-[600px]">

            <BackToBlog />

			<H1 class="mb-2">
                Posts in: {blogPostDate.phrase}
            </H1>

            { posts.map( post => <Post post={post}  /> )}
		</Wrapper>
	</section>
